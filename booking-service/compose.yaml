services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
    volumes:
      - ./docker/sql_scripts:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    restart: always
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - '1888:1888' # pprof extension
      - '8888:8888' # Prometheus metrics exposed by the Collector
      - '8889:8889' # Prometheus exporter metrics
      - '13133:13133' # health_check extension
      - '4317:4317' # OTLP gRPC receiver
      - '4318:4318' # OTLP http receiver
      - '55679:55679' # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - '3000:3000'

  jaeger-all-in-one:
    image: jaegertracing/all-in-one:1.43
    restart: always
    ports:
      - '16686:16686' # Jaeger UI
      - '14268' # Jaeger collector HTTP endpoint
      - '14250' # Jaeger collector gRPC endpoint

  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - '9411:9411' # Zipkin UI

volumes:
  pgdata:
